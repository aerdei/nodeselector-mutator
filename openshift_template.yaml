kind: Template
apiVersion: v1
metadata:
  name: "${APP_NAME}"
objects:
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    generation: 1
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: "${APP_NAME}"
      spec:
        containers:
        - env:
          - name: APP_MODULE
            value: nodeselector_mutator:build_mutator()
          - name: APP_CONFIG
            value: gunicorn_conf.py
          - name: MUTATOR_LOGLEVEL
            value: info
          image: nodeselector-mutator:latest
          imagePullPolicy: Always
          name: "${APP_NAME}"
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${APP_NAME}"
        from:
          kind: ImageStreamTag
          name: "${APP_NAME}:latest"
          namespace: "${PROJECT_NAME}"
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    ports:
    - name: 443-5000-tcp
      port: 443
      protocol: TCP
      targetPort: 5000
    selector:
      app: "${APP_NAME}"
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - name: APP_NAME
    displayName: Application name 
    value: "nodeselector-mutator"
    required: true
  - name: PROJECT_NAME
    description: Project name
    value: "nodeselector-mutator"
    required: true
